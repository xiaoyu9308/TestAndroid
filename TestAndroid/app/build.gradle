apply plugin: 'com.android.application'

// 从环境变量中读取字符串或整数
def env = { System.getenv it }
def envInt = { Integer.parseInt(env(it)) }

android {
    compileSdkVersion 24
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "com.example.temp.testandroid"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

if (env("ANDROID_SIGN_APK"))
// 有环境变量时 才设置apk签名信息
    android {
        signingConfigs {
            releaseSigning {
                storeFile file(env("ANDROID_KEYSTORE_PATH"))
                storePassword env("ANDROID_KEYSTORE_PASS")
                keyAlias env("ANDROID_KEY_ALIAS")
                keyPassword env("ANDROID_KEY_PASS")
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.releaseSigning
            }
        }
    }

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
}
